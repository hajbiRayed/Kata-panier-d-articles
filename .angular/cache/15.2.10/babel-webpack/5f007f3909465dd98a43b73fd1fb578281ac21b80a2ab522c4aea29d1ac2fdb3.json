{"ast":null,"code":"import { CartItem } from '../../coreModule/model/cartItem.model';\nimport { Validators } from '@angular/forms';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/forms\";\nimport * as i2 from \"../../coreModule/cart-item-service/cart-items.service\";\nimport * as i3 from \"../../coreModule/tax-service/tax.service\";\nimport * as i4 from \"../../coreModule/messages-service/message.service\";\nimport * as i5 from \"@angular/common\";\nfunction ProductComponent_div_11_div_6_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 13);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r3 = i0.ɵɵnextContext(2);\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate1(\" \", ctx_r3.getQuantityErrorMessage(), \" \");\n  }\n}\nfunction ProductComponent_div_11_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\")(1, \"div\", 8)(2, \"label\", 9);\n    i0.ɵɵtext(3, \"Quantit\\u00E9\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(4, \"div\", 10);\n    i0.ɵɵelement(5, \"input\", 11);\n    i0.ɵɵelementEnd()();\n    i0.ɵɵtemplate(6, ProductComponent_div_11_div_6_Template, 2, 1, \"div\", 12);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r0 = i0.ɵɵnextContext();\n    let tmp_0_0;\n    i0.ɵɵadvance(6);\n    i0.ɵɵproperty(\"ngIf\", ctx_r0.productForm == null ? null : (tmp_0_0 = ctx_r0.productForm.get(\"quantity\")) == null ? null : tmp_0_0.invalid);\n  }\n}\nfunction ProductComponent_ng_template_12_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵtext(0, \"non disponible\");\n  }\n}\nexport class ProductComponent {\n  constructor(fb, cartItemsService, taxService, messageService) {\n    this.fb = fb;\n    this.cartItemsService = cartItemsService;\n    this.taxService = taxService;\n    this.messageService = messageService;\n    this.product = {};\n    this.cartItems = [];\n    this.unite = \"€\";\n  }\n  ngOnInit() {\n    this.cartItems = this.cartItemsService.getCartItems();\n    this.productForm = this.fb.group({\n      quantity: [1, [Validators.required, this.quantityValidator(this.product, this.cartItems)]]\n    });\n    this.cartItemsService.getValue().subscribe(cartItems => {\n      this.cartItems = cartItems;\n    });\n  }\n  quantityValidator(product, cardItems) {\n    return control => {\n      const value = control.value;\n      let selectedCardItem = cardItems.find(item => item.product === product);\n      let selectedQuantity = selectedCardItem ? selectedCardItem.quantity : 0;\n      if (product.quantity !== undefined && value + selectedQuantity > product.quantity) {\n        return {\n          'quantityExceedsMax': true\n        };\n      }\n      return null;\n    };\n  }\n  getQuantityErrorMessage() {\n    const quantityControl = this.productForm.get('quantity');\n    if (quantityControl !== null) {\n      console.log(this.productForm);\n      if (quantityControl.hasError('required')) {\n        return 'La quantité est requise';\n      } else if (quantityControl.hasError('quantityExceedsMax')) {\n        return 'La quantité saisie dépasse la quantité disponible';\n      } else {\n        return '';\n      }\n    }\n    console.log('productForm' + this.productForm);\n    return '';\n  }\n  addToCart(product, quantity) {\n    let cartItem = this.cartItems.find(item => item.product.id === product.id);\n    if (cartItem) {\n      if (cartItem.quantity && product.quantity && product.quantity >= cartItem.quantity + quantity) {\n        cartItem.quantity = cartItem.quantity + quantity;\n        this.messageService.add('Amount in cart changed for: ' + cartItem.product.productName);\n        this.cartItemsService.emitValue(this.cartItems);\n      } else {\n        this.messageService.addError('Quantity not available: ' + product.productName);\n      }\n    } else {\n      cartItem = new CartItem();\n      cartItem.product = product;\n      cartItem.quantity = quantity;\n      cartItem.priceWithTax = Number(this.taxService.getPriceWithTax(product));\n      this.cartItems.push(cartItem);\n      this.messageService.add('Added to cart: ' + cartItem.product.productName);\n      this.cartItemsService.emitValue(this.cartItems);\n    }\n  }\n  static #_ = this.ɵfac = function ProductComponent_Factory(t) {\n    return new (t || ProductComponent)(i0.ɵɵdirectiveInject(i1.FormBuilder), i0.ɵɵdirectiveInject(i2.CartItemsService), i0.ɵɵdirectiveInject(i3.TaxService), i0.ɵɵdirectiveInject(i4.MessageService));\n  };\n  static #_2 = this.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: ProductComponent,\n    selectors: [[\"app-product\"]],\n    inputs: {\n      product: \"product\"\n    },\n    decls: 16,\n    vars: 9,\n    consts: [[1, \"product-card\", 2, \"padding\", \"10px\"], [1, \"box-part\", \"text-center\"], [1, \"title\"], [1, \"text\"], [3, \"formGroup\"], [4, \"ngIf\", \"ngIfElse\"], [\"notAvailableBlock\", \"\"], [1, \"btn\", \"btn-primary\", \"btn-sm\", \"ml-auto\", 3, \"disabled\", \"click\"], [1, \"form-group\", \"row\"], [\"for\", \"quantity\", 1, \"col-sm-6\", \"col-form-label\", \"pt-2\"], [1, \"col-sm-5\", \"pl-0\"], [\"type\", \"number\", \"id\", \"quantity\", \"min\", \"1\", \"formControlName\", \"quantity\", 1, \"form-control\", \"form-control-sm\"], [\"class\", \"text-danger\", 4, \"ngIf\"], [1, \"text-danger\"]],\n    template: function ProductComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"div\", 0)(1, \"div\", 1);\n        i0.ɵɵtext(2);\n        i0.ɵɵelementStart(3, \"div\", 2)(4, \"h6\");\n        i0.ɵɵtext(5);\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelementStart(6, \"div\", 3)(7, \"span\");\n        i0.ɵɵtext(8);\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelementStart(9, \"div\")(10, \"form\", 4);\n        i0.ɵɵtemplate(11, ProductComponent_div_11_Template, 7, 1, \"div\", 5);\n        i0.ɵɵtemplate(12, ProductComponent_ng_template_12_Template, 1, 0, \"ng-template\", null, 6, i0.ɵɵtemplateRefExtractor);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(14, \"button\", 7);\n        i0.ɵɵlistener(\"click\", function ProductComponent_Template_button_click_14_listener() {\n          let tmp_b_0;\n          return ctx.addToCart(ctx.product, (tmp_b_0 = ctx.productForm.get(\"quantity\")) == null ? null : tmp_b_0.value);\n        });\n        i0.ɵɵtext(15, \"Ajouter\");\n        i0.ɵɵelementEnd()()()();\n      }\n      if (rf & 2) {\n        const _r1 = i0.ɵɵreference(13);\n        let tmp_6_0;\n        i0.ɵɵadvance(2);\n        i0.ɵɵtextInterpolate1(\" \", ctx.product.productName, \" \");\n        i0.ɵɵadvance(3);\n        i0.ɵɵtextInterpolate1(\" Cat\\u00E9gorie: \", ctx.product.category, \"\");\n        i0.ɵɵadvance(3);\n        i0.ɵɵtextInterpolate3(\" Prix: \", ctx.taxService.getPriceWithTax(ctx.product), \" \", \" \", \" \", ctx.unite, \"\");\n        i0.ɵɵadvance(2);\n        i0.ɵɵproperty(\"formGroup\", ctx.productForm);\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngIf\", ctx.product.quantity !== 0)(\"ngIfElse\", _r1);\n        i0.ɵɵadvance(3);\n        i0.ɵɵproperty(\"disabled\", ctx.product.quantity === 0 || ((tmp_6_0 = ctx.productForm.get(\"quantity\")) == null ? null : tmp_6_0.invalid));\n      }\n    },\n    dependencies: [i5.NgIf, i1.ɵNgNoValidate, i1.DefaultValueAccessor, i1.NumberValueAccessor, i1.NgControlStatus, i1.NgControlStatusGroup, i1.MinValidator, i1.FormGroupDirective, i1.FormControlName],\n    styles: [\".product-actions[_ngcontent-%COMP%] {\\n  display: flex;\\n  align-items: center;\\n}\\n.product-card[_ngcontent-%COMP%] {\\n  display: block;\\n  position: relative;\\n  width: 100%;\\n  padding: 18px;\\n  border: 1px solid #e1e7ec;\\n  border-radius: 7px;\\n  background-color: #fff;\\n  margin-bottom: 20px;\\n}\\n\\n.box-part[_ngcontent-%COMP%]{\\n  background:#FFF;\\n  border-radius:0;\\n  padding:20px 05px;\\n  margin:05px 0px;\\n}\\n.product-actions[_ngcontent-%COMP%]   .form-group[_ngcontent-%COMP%] {\\n  margin-bottom: 0;\\n}\\n\\n.product-actions[_ngcontent-%COMP%]   label[_ngcontent-%COMP%] {\\n  font-weight: bold;\\n}\\n\\n.product-actions[_ngcontent-%COMP%]   .form-control[_ngcontent-%COMP%] {\\n  border-radius: 20px;\\n  border: 2px solid #ccc;\\n  padding: 6px 12px;\\n  transition: border-color 0.3s ease-in-out;\\n}\\n\\n.product-actions[_ngcontent-%COMP%]   .form-control[_ngcontent-%COMP%]:focus {\\n  outline: none;\\n  border-color: #4b8bff;\\n  box-shadow: 0 0 5px rgba(75, 139, 255, 0.5);\\n}\\n\\n.product-actions[_ngcontent-%COMP%]   .text-danger[_ngcontent-%COMP%] {\\n  margin-top: 5px;\\n  font-size: 12px;\\n}\\n\\n.product-actions[_ngcontent-%COMP%]   button[_ngcontent-%COMP%] {\\n  border-radius: 20px;\\n  font-size: 14px;\\n  font-weight: bold;\\n  padding: 6px 20px;\\n}\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8uL3NyYy9hcHAvcHJvZHVjdE1vZHVsZS9wcm9kdWN0L3Byb2R1Y3QuY29tcG9uZW50LmNzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtFQUNFLGFBQWE7RUFDYixtQkFBbUI7QUFDckI7QUFDQTtFQUNFLGNBQWM7RUFDZCxrQkFBa0I7RUFDbEIsV0FBVztFQUNYLGFBQWE7RUFDYix5QkFBeUI7RUFDekIsa0JBQWtCO0VBQ2xCLHNCQUFzQjtFQUN0QixtQkFBbUI7QUFDckI7O0FBRUE7RUFDRSxlQUFlO0VBQ2YsZUFBZTtFQUNmLGlCQUFpQjtFQUNqQixlQUFlO0FBQ2pCO0FBQ0E7RUFDRSxnQkFBZ0I7QUFDbEI7O0FBRUE7RUFDRSxpQkFBaUI7QUFDbkI7O0FBRUE7RUFDRSxtQkFBbUI7RUFDbkIsc0JBQXNCO0VBQ3RCLGlCQUFpQjtFQUNqQix5Q0FBeUM7QUFDM0M7O0FBRUE7RUFDRSxhQUFhO0VBQ2IscUJBQXFCO0VBQ3JCLDJDQUEyQztBQUM3Qzs7QUFFQTtFQUNFLGVBQWU7RUFDZixlQUFlO0FBQ2pCOztBQUVBO0VBQ0UsbUJBQW1CO0VBQ25CLGVBQWU7RUFDZixpQkFBaUI7RUFDakIsaUJBQWlCO0FBQ25CIiwic291cmNlc0NvbnRlbnQiOlsiLnByb2R1Y3QtYWN0aW9ucyB7XG4gIGRpc3BsYXk6IGZsZXg7XG4gIGFsaWduLWl0ZW1zOiBjZW50ZXI7XG59XG4ucHJvZHVjdC1jYXJkIHtcbiAgZGlzcGxheTogYmxvY2s7XG4gIHBvc2l0aW9uOiByZWxhdGl2ZTtcbiAgd2lkdGg6IDEwMCU7XG4gIHBhZGRpbmc6IDE4cHg7XG4gIGJvcmRlcjogMXB4IHNvbGlkICNlMWU3ZWM7XG4gIGJvcmRlci1yYWRpdXM6IDdweDtcbiAgYmFja2dyb3VuZC1jb2xvcjogI2ZmZjtcbiAgbWFyZ2luLWJvdHRvbTogMjBweDtcbn1cblxuLmJveC1wYXJ0e1xuICBiYWNrZ3JvdW5kOiNGRkY7XG4gIGJvcmRlci1yYWRpdXM6MDtcbiAgcGFkZGluZzoyMHB4IDA1cHg7XG4gIG1hcmdpbjowNXB4IDBweDtcbn1cbi5wcm9kdWN0LWFjdGlvbnMgLmZvcm0tZ3JvdXAge1xuICBtYXJnaW4tYm90dG9tOiAwO1xufVxuXG4ucHJvZHVjdC1hY3Rpb25zIGxhYmVsIHtcbiAgZm9udC13ZWlnaHQ6IGJvbGQ7XG59XG5cbi5wcm9kdWN0LWFjdGlvbnMgLmZvcm0tY29udHJvbCB7XG4gIGJvcmRlci1yYWRpdXM6IDIwcHg7XG4gIGJvcmRlcjogMnB4IHNvbGlkICNjY2M7XG4gIHBhZGRpbmc6IDZweCAxMnB4O1xuICB0cmFuc2l0aW9uOiBib3JkZXItY29sb3IgMC4zcyBlYXNlLWluLW91dDtcbn1cblxuLnByb2R1Y3QtYWN0aW9ucyAuZm9ybS1jb250cm9sOmZvY3VzIHtcbiAgb3V0bGluZTogbm9uZTtcbiAgYm9yZGVyLWNvbG9yOiAjNGI4YmZmO1xuICBib3gtc2hhZG93OiAwIDAgNXB4IHJnYmEoNzUsIDEzOSwgMjU1LCAwLjUpO1xufVxuXG4ucHJvZHVjdC1hY3Rpb25zIC50ZXh0LWRhbmdlciB7XG4gIG1hcmdpbi10b3A6IDVweDtcbiAgZm9udC1zaXplOiAxMnB4O1xufVxuXG4ucHJvZHVjdC1hY3Rpb25zIGJ1dHRvbiB7XG4gIGJvcmRlci1yYWRpdXM6IDIwcHg7XG4gIGZvbnQtc2l6ZTogMTRweDtcbiAgZm9udC13ZWlnaHQ6IGJvbGQ7XG4gIHBhZGRpbmc6IDZweCAyMHB4O1xufVxuIl0sInNvdXJjZVJvb3QiOiIifQ== */\"]\n  });\n}","map":{"version":3,"mappings":"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","names":["CartItem","Validators","i0","ProductComponent","constructor","fb","cartItemsService","taxService","messageService","ngOnInit","cartItems","getCartItems","productForm","group","quantity","required","quantityValidator","product","getValue","subscribe","cardItems","control","value","selectedCardItem","find","item","selectedQuantity","undefined","getQuantityErrorMessage","quantityControl","get","console","log","hasError","addToCart","cartItem","id","add","productName","emitValue","addError","priceWithTax","Number","getPriceWithTax","push","selectors","inputs","decls","vars","consts","template","ctx"],"sourceRoot":"","sources":["C:\\Users\\Raed\\Desktop\\Kata-Angular\\src\\app\\productModule\\product\\product.component.ts","C:\\Users\\Raed\\Desktop\\Kata-Angular\\src\\app\\productModule\\product\\product.component.html"],"sourcesContent":["import {Component, Input, OnInit} from '@angular/core';\nimport {Product} from '../../coreModule/model/product.model'\nimport {CartItem} from '../../coreModule/model/cartItem.model';\nimport {AbstractControl, FormBuilder, FormGroup, ValidationErrors, ValidatorFn, Validators} from '@angular/forms';\nimport {CartItemsService} from '../../coreModule/cart-item-service/cart-items.service';\nimport {TaxService} from '../../coreModule/tax-service/tax.service';\nimport { MessageService } from '../../coreModule/messages-service/message.service';\n\n\n\n\n\n\n\n@Component({\n  selector: 'app-product',\n  templateUrl: './product.component.html',\n  styleUrls: ['./product.component.css']\n})\n\n\n\nexport class ProductComponent implements OnInit {\n\n  @Input() product: Product = {};\n  cartItems: CartItem[] = [];\n  // @ts-ignore\n  productForm: FormGroup;\n  unite : string = \"€\"\n\n  constructor(private fb: FormBuilder,\n              private cartItemsService: CartItemsService,\n              public taxService: TaxService , private messageService: MessageService) {\n  }\n\n  ngOnInit() {\n    this.cartItems = this.cartItemsService.getCartItems();\n    this.productForm = this.fb.group({\n      quantity: [1, [Validators.required, this.quantityValidator(this.product, this.cartItems)]]\n    });\n    this.cartItemsService.getValue().subscribe(cartItems => {\n      this.cartItems = cartItems;\n    });\n  }\n\n  quantityValidator(product: Product, cardItems: CartItem[]): ValidatorFn {\n\n    return (control: AbstractControl): ValidationErrors | null => {\n      const value = control.value;\n      let selectedCardItem = cardItems.find(item => item.product === product);\n      let selectedQuantity = selectedCardItem ? selectedCardItem.quantity: 0;\n      if (product.quantity !== undefined && value + selectedQuantity > product.quantity) {\n        return {'quantityExceedsMax': true};\n      }\n      return null;\n    };\n  }\n\n  getQuantityErrorMessage(): string {\n    const quantityControl = this.productForm.get('quantity');\n    if (quantityControl !== null) {\n      console.log( this.productForm)\n      if (quantityControl.hasError('required')) {\n        return 'La quantité est requise';\n      } else if (quantityControl.hasError('quantityExceedsMax')) {\n        return 'La quantité saisie dépasse la quantité disponible';\n      } else {\n        return '';\n      }\n    }\n    console.log('productForm' + this.productForm)\n    return '';\n  }\n\n\n  addToCart(product: Product, quantity: number): void {\n           \n    let cartItem = this.cartItems.find((item) => item.product.id === product.id);\n\n    if (cartItem) {\n      if(cartItem.quantity && product.quantity && (product.quantity >= cartItem.quantity + quantity) ){\n      cartItem.quantity = cartItem.quantity + quantity;\n      this.messageService.add('Amount in cart changed for: ' + cartItem.product.productName);\n      this.cartItemsService.emitValue(this.cartItems);\n      }\n      else {\n        this.messageService.addError('Quantity not available: ' + product.productName);\n    \n      }\n    } else {\n      cartItem = new CartItem();\n      cartItem.product = product;\n      cartItem.quantity = quantity;\n      cartItem.priceWithTax = Number(this.taxService.getPriceWithTax(product));\n      this.cartItems.push(cartItem);\n      this.messageService.add('Added to cart: ' + cartItem.product.productName);\n      this.cartItemsService.emitValue(this.cartItems);\n    }\n  \n}\n}\n","<div class=\"product-card\" style=\"padding: 10px\">\n  <div class=\"box-part text-center\">\n                        \n    {{product.productName}}\n    \n<div class=\"title\">\n<h6>  Catégorie: {{product.category}}</h6>\n</div>\n    \n<div class=\"text\">\n<span>  Prix: {{ taxService.getPriceWithTax(product) }} {{\" \"}} {{unite}}</span>\n</div>\n    \n<div >\n<form [formGroup]=\"productForm\">\n  <div *ngIf=\"product.quantity !== 0; else notAvailableBlock\" >\n   <div class=\"form-group row\">\n    <label class=\"col-sm-6 col-form-label pt-2\" for=\"quantity\">Quantité</label>\n    <div class=\"col-sm-5 pl-0\">\n      <input type=\"number\" class=\"form-control form-control-sm\" id=\"quantity\" min=\"1\" formControlName=\"quantity\">\n   \n    </div>\n  </div> \n    <div *ngIf=\"productForm?.get('quantity')?.invalid\" class=\"text-danger\">\n      {{ getQuantityErrorMessage() }}\n    </div>\n  </div>\n  <ng-template #notAvailableBlock>non disponible</ng-template>\n</form>\n<button class=\"btn btn-primary btn-sm ml-auto\" [disabled]=\"product.quantity === 0 || productForm.get('quantity')?.invalid\"\n        (click)=\"addToCart(product, productForm.get('quantity')?.value)\">Ajouter</button>\n</div>\n</div>\n\n  \n \n</div>\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}