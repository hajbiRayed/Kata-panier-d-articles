{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"../../coreModule/api-service/api.service\";\nimport * as i2 from \"../../coreModule/cart-item-service/cart-items.service\";\nimport * as i3 from \"@angular/common\";\nimport * as i4 from \"@angular/router\";\nimport * as i5 from \"@angular/forms\";\nimport * as i6 from \"../product/product.component\";\nfunction ProductListComponent_option_8_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"option\", 12);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const category_r2 = ctx.$implicit;\n    i0.ɵɵproperty(\"value\", category_r2);\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate(category_r2);\n  }\n}\nfunction ProductListComponent_div_19_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 13);\n    i0.ɵɵelement(1, \"app-product\", 14);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const product_r3 = ctx.$implicit;\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"product\", product_r3);\n  }\n}\nexport class ProductListComponent {\n  constructor(apiService, cartItemsService) {\n    this.apiService = apiService;\n    this.cartItemsService = cartItemsService;\n    this.productList = [];\n    this.categories = [];\n    this.selectedCategory = '';\n    this.filteredList = [];\n    this.cartItems = [];\n  }\n  ngOnInit() {\n    this.apiService.getProductList().subscribe(products => {\n      // Extract unique categories from the product list\n      this.categories = Array.from(new Set(products.map(item => item.category)));\n      // Initialize productList with all products\n      this.productList = products.filter(product => product.productName !== '');\n      // Initialize filteredList with all products\n      this.filteredList = this.productList;\n    });\n    // Initialise Cart Items from CartItemsService\n    this.cartItems = this.cartItemsService.getCartItems();\n    // subscribe to cart Items subject in order to get updated to selected product actions\n    this.cartItemsService.getValue().subscribe(cartItems => {\n      this.cartItems = cartItems;\n    });\n  }\n  onChangeCategoryFilter() {\n    // Filter products based on selected category\n    console.log(\"ff\");\n    this.filteredList = this.productList.filter(product => product.category === this.selectedCategory || this.selectedCategory === '');\n  }\n  static #_ = this.ɵfac = function ProductListComponent_Factory(t) {\n    return new (t || ProductListComponent)(i0.ɵɵdirectiveInject(i1.ApiService), i0.ɵɵdirectiveInject(i2.CartItemsService));\n  };\n  static #_2 = this.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: ProductListComponent,\n    selectors: [[\"app-product-list\"]],\n    decls: 20,\n    vars: 4,\n    consts: [[1, \"category-filter\", \"d-flex\", \"align-items-center\", \"justify-content-around\", \"pt-2\", \"pb-2\"], [3, \"ngModel\", \"ngModelChange\"], [\"value\", \"\"], [3, \"value\", 4, \"ngFor\", \"ngForOf\"], [1, \"cart-container\"], [\"routerLink\", \"/cart\", 1, \"cart-link\"], [1, \"material-icons\"], [1, \"cart-items\", \"position-relative\"], [1, \"position-absolute\", \"top-0\", \"start-100\", \"translate-middle\", \"badge\", \"rounded-pill\", \"bg-primary\"], [1, \"container\", \"mt-3\"], [1, \"row\"], [\"class\", \"col-sm-12 col-md-4 col-lg-4\", 4, \"ngFor\", \"ngForOf\"], [3, \"value\"], [1, \"col-sm-12\", \"col-md-4\", \"col-lg-4\"], [3, \"product\"]],\n    template: function ProductListComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"div\")(1, \"div\", 0)(2, \"div\")(3, \"label\");\n        i0.ɵɵtext(4, \"Cat\\u00E9gorie Filter\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(5, \"select\", 1);\n        i0.ɵɵlistener(\"ngModelChange\", function ProductListComponent_Template_select_ngModelChange_5_listener($event) {\n          return ctx.selectedCategory = $event;\n        })(\"ngModelChange\", function ProductListComponent_Template_select_ngModelChange_5_listener() {\n          return ctx.onChangeCategoryFilter();\n        });\n        i0.ɵɵelementStart(6, \"option\", 2);\n        i0.ɵɵtext(7, \"Toutes\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵtemplate(8, ProductListComponent_option_8_Template, 2, 2, \"option\", 3);\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelementStart(9, \"div\", 4)(10, \"a\", 5);\n        i0.ɵɵtext(11, \" Panier \");\n        i0.ɵɵelementStart(12, \"i\", 6);\n        i0.ɵɵtext(13, \"shopping_cart\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(14, \"em\", 7)(15, \"span\", 8);\n        i0.ɵɵtext(16);\n        i0.ɵɵelementEnd()()()()();\n        i0.ɵɵelementStart(17, \"div\", 9)(18, \"div\", 10);\n        i0.ɵɵtemplate(19, ProductListComponent_div_19_Template, 2, 1, \"div\", 11);\n        i0.ɵɵelementEnd()()();\n      }\n      if (rf & 2) {\n        i0.ɵɵadvance(5);\n        i0.ɵɵproperty(\"ngModel\", ctx.selectedCategory);\n        i0.ɵɵadvance(3);\n        i0.ɵɵproperty(\"ngForOf\", ctx.categories);\n        i0.ɵɵadvance(8);\n        i0.ɵɵtextInterpolate1(\" \", ctx.cartItems.length, \" \");\n        i0.ɵɵadvance(3);\n        i0.ɵɵproperty(\"ngForOf\", ctx.filteredList);\n      }\n    },\n    dependencies: [i3.NgForOf, i4.RouterLink, i5.NgSelectOption, i5.ɵNgSelectMultipleOption, i5.SelectControlValueAccessor, i5.NgControlStatus, i5.NgModel, i6.ProductComponent],\n    styles: [\".cart-container[_ngcontent-%COMP%] {\\n  display: flex;\\n  align-items: center;\\n  justify-content: flex-end;\\n}\\n\\n.cart-container[_ngcontent-%COMP%]   .material-icons[_ngcontent-%COMP%] {\\n  font-size: 24px;\\n  margin-right: 5px;\\n  color: #000;\\n}\\n\\n.cart-link[_ngcontent-%COMP%] {\\n  font-size: 16px;\\n  color: #000;\\n  text-decoration: none;\\n  margin-right: 20px;\\n}\\n\\n.cart-items[_ngcontent-%COMP%] {\\n  border-radius: 5px;\\n  margin-left: 5px;\\n}\\n.category-filter[_ngcontent-%COMP%] {\\n  background-color: #f4f4f4;\\n\\n  border: none;\\n  padding: 5px 15px;\\n  margin-bottom: 30px;\\n}\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8uL3NyYy9hcHAvcHJvZHVjdE1vZHVsZS9wcm9kdWN0LWxpc3QvcHJvZHVjdC1saXN0LmNvbXBvbmVudC5jc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7RUFDRSxhQUFhO0VBQ2IsbUJBQW1CO0VBQ25CLHlCQUF5QjtBQUMzQjs7QUFFQTtFQUNFLGVBQWU7RUFDZixpQkFBaUI7RUFDakIsV0FBVztBQUNiOztBQUVBO0VBQ0UsZUFBZTtFQUNmLFdBQVc7RUFDWCxxQkFBcUI7RUFDckIsa0JBQWtCO0FBQ3BCOztBQUVBO0VBQ0Usa0JBQWtCO0VBQ2xCLGdCQUFnQjtBQUNsQjtBQUNBO0VBQ0UseUJBQXlCOztFQUV6QixZQUFZO0VBQ1osaUJBQWlCO0VBQ2pCLG1CQUFtQjtBQUNyQiIsInNvdXJjZXNDb250ZW50IjpbIi5jYXJ0LWNvbnRhaW5lciB7XG4gIGRpc3BsYXk6IGZsZXg7XG4gIGFsaWduLWl0ZW1zOiBjZW50ZXI7XG4gIGp1c3RpZnktY29udGVudDogZmxleC1lbmQ7XG59XG5cbi5jYXJ0LWNvbnRhaW5lciAubWF0ZXJpYWwtaWNvbnMge1xuICBmb250LXNpemU6IDI0cHg7XG4gIG1hcmdpbi1yaWdodDogNXB4O1xuICBjb2xvcjogIzAwMDtcbn1cblxuLmNhcnQtbGluayB7XG4gIGZvbnQtc2l6ZTogMTZweDtcbiAgY29sb3I6ICMwMDA7XG4gIHRleHQtZGVjb3JhdGlvbjogbm9uZTtcbiAgbWFyZ2luLXJpZ2h0OiAyMHB4O1xufVxuXG4uY2FydC1pdGVtcyB7XG4gIGJvcmRlci1yYWRpdXM6IDVweDtcbiAgbWFyZ2luLWxlZnQ6IDVweDtcbn1cbi5jYXRlZ29yeS1maWx0ZXIge1xuICBiYWNrZ3JvdW5kLWNvbG9yOiAjZjRmNGY0O1xuXG4gIGJvcmRlcjogbm9uZTtcbiAgcGFkZGluZzogNXB4IDE1cHg7XG4gIG1hcmdpbi1ib3R0b206IDMwcHg7XG59XG5cblxuXG4iXSwic291cmNlUm9vdCI6IiJ9 */\"]\n  });\n}","map":{"version":3,"mappings":";;;;;;;;;IAOMA,kCAA+D;IAAAA,YAAc;IAAAA,iBAAS;;;;IAA1CA,mCAAkB;IAACA,eAAc;IAAdA,iCAAc;;;;;IAqB/EA,+BAA8E;IAC5EA,kCAA+C;IACjDA,iBAAM;;;;IADSA,eAAmB;IAAnBA,oCAAmB;;;AClBtC,OAAM,MAAOC,oBAAoB;EAQ/BC,YAAoBC,UAAsB,EACtBC,gBAAkC;IADlC,eAAU,GAAVD,UAAU;IACV,qBAAgB,GAAhBC,gBAAgB;IAPpC,gBAAW,GAAc,EAAE;IAC3B,eAAU,GAA2B,EAAE;IACvC,qBAAgB,GAAG,EAAE;IACrB,iBAAY,GAAc,EAAE;IAC5B,cAAS,GAAe,EAAE;EAI1B;EAEAC,QAAQ;IACN,IAAI,CAACF,UAAU,CAACG,cAAc,EAAE,CAACC,SAAS,CAACC,QAAQ,IAAG;MACpD;MACA,IAAI,CAACC,UAAU,GAAGC,KAAK,CAACC,IAAI,CAAC,IAAIC,GAAG,CAACJ,QAAQ,CAACK,GAAG,CAACC,IAAI,IAAIA,IAAI,CAACC,QAAQ,CAAC,CAAC,CAAC;MAC1E;MACA,IAAI,CAACC,WAAW,GAAGR,QAAQ,CAACS,MAAM,CAACC,OAAO,IAAIA,OAAO,CAACC,WAAW,KAAK,EAAE,CAAC;MACzE;MACA,IAAI,CAACC,YAAY,GAAG,IAAI,CAACJ,WAAW;IACtC,CAAC,CAAC;IACF;IACA,IAAI,CAACK,SAAS,GAAG,IAAI,CAACjB,gBAAgB,CAACkB,YAAY,EAAE;IACrD;IACA,IAAI,CAAClB,gBAAgB,CAACmB,QAAQ,EAAE,CAAChB,SAAS,CAACc,SAAS,IAAG;MACrD,IAAI,CAACA,SAAS,GAAGA,SAAS;IAC5B,CAAC,CAAC;EACJ;EAEAG,sBAAsB;IACpB;IACAC,OAAO,CAACC,GAAG,CAAC,IAAI,CAAC;IACjB,IAAI,CAACN,YAAY,GAAG,IAAI,CAACJ,WAAW,CAACC,MAAM,CAACC,OAAO,IAAIA,OAAO,CAACH,QAAQ,KAAK,IAAI,CAACY,gBAAgB,IAAI,IAAI,CAACA,gBAAgB,KAAK,EAAE,CAAC;EACpI;EAAC;qBAjCU1B,oBAAoB;EAAA;EAAA;UAApBA,oBAAoB;IAAA2B;IAAAC;IAAAC;IAAAC;IAAAC;MAAA;QDXjChC,2BAAM;QAIKA,qCAAgB;QAAAA,iBAAQ;QAC/BA,iCAAkF;QAA1EA;UAAA;QAAA,EAA8B;UAAA,OAAkBiC,4BAAwB;QAAA,EAA1C;QACpCjC,iCAAiB;QAAAA,sBAAM;QAAAA,iBAAS;QAChCA,2EAAsF;QACxFA,iBAAS;QAEXA,8BAA4B;QAGxBA,yBACA;QAAAA,6BAA0B;QAAAA,8BAAa;QAAAA,iBAAI;QAE3CA,8BAAyC;QAErCA,aAEF;QAAAA,iBAAO;QAMbA,+BAA4B;QAE1BA,wEAEM;QACRA,iBAAM;;;QA1BIA,eAA8B;QAA9BA,8CAA8B;QAEPA,eAAa;QAAbA,wCAAa;QAWtCA,eAEF;QAFEA,qDAEF;QAQqBA,eAAe;QAAfA,0CAAe","names":["i0","ProductListComponent","constructor","apiService","cartItemsService","ngOnInit","getProductList","subscribe","products","categories","Array","from","Set","map","item","category","productList","filter","product","productName","filteredList","cartItems","getCartItems","getValue","onChangeCategoryFilter","console","log","selectedCategory","selectors","decls","vars","consts","template","ctx"],"sourceRoot":"","sources":["C:\\Users\\Raed\\Desktop\\panierAngular-main\\src\\app\\productModule\\product-list\\product-list.component.html","C:\\Users\\Raed\\Desktop\\panierAngular-main\\src\\app\\productModule\\product-list\\product-list.component.ts"],"sourcesContent":["<div >\n\n  <div class=\"category-filter d-flex align-items-center justify-content-around  pt-2 pb-2\">\n    <div>\n    <label>Catégorie Filter</label>\n    <select [(ngModel)]=\"selectedCategory\" (ngModelChange)=\"onChangeCategoryFilter()\">\n      <option value=\"\">Toutes</option>\n      <option *ngFor=\"let category of categories\" [value]=\"category\">{{ category }}</option>\n    </select>\n  </div>\n  <div class=\"cart-container\">\n\n    <a routerLink=\"/cart\" class=\"cart-link\">\n      Panier\n      <i class=\"material-icons\">shopping_cart</i>\n \n      <em class=\"cart-items position-relative\">\n        <span class=\"position-absolute top-0 start-100 translate-middle badge rounded-pill bg-primary\">\n          {{cartItems.length}}\n         \n        </span>\n      </em>\n      \n    </a>\n  </div>\n  </div>\n  <div class=\"container mt-3\">\n  <div class=\"row\">\n    <div *ngFor=\"let product of filteredList\" class=\"col-sm-12 col-md-4 col-lg-4\">\n      <app-product [product]=\"product\"></app-product>\n    </div>\n  </div>\n</div>\n</div>\n","import {Component, OnInit} from '@angular/core';\nimport {ApiService} from \"../../coreModule/api-service/api.service\";\nimport {Product} from \"../../coreModule/model/product.model\";\nimport {CartItemsService} from \"../../coreModule/cart-item-service/cart-items.service\";\nimport {CartItem} from \"../../coreModule/model/cartItem.model\";\n\n@Component({\n  selector: 'app-product-list',\n  templateUrl: './product-list.component.html',\n  styleUrls: ['./product-list.component.css']\n})\nexport class ProductListComponent implements OnInit {\n\n  productList: Product[] = [];\n  categories: (string | undefined)[] = [];\n  selectedCategory = '';\n  filteredList: Product[] = [];\n  cartItems: CartItem[] = [];\n\n  constructor(private apiService: ApiService,\n              private cartItemsService: CartItemsService) {\n  }\n\n  ngOnInit(): void {\n    this.apiService.getProductList().subscribe(products => {\n      // Extract unique categories from the product list\n      this.categories = Array.from(new Set(products.map(item => item.category)));\n      // Initialize productList with all products\n      this.productList = products.filter(product => product.productName !== '');\n      // Initialize filteredList with all products\n      this.filteredList = this.productList;\n    });\n    // Initialise Cart Items from CartItemsService\n    this.cartItems = this.cartItemsService.getCartItems();\n    // subscribe to cart Items subject in order to get updated to selected product actions\n    this.cartItemsService.getValue().subscribe(cartItems => {\n      this.cartItems = cartItems;\n    });\n  }\n\n  onChangeCategoryFilter() {\n    // Filter products based on selected category\n    console.log(\"ff\")\n    this.filteredList = this.productList.filter(product => product.category === this.selectedCategory || this.selectedCategory === '');\n  }\n}\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}